#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define DEFAULT 0
#define GAMING 1
#define RAISE 2
/ {

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   [   |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   | media |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | up    | skip  |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  |       | RAISE| ???   | bksp  | enter| left  | down  | right |
            bindings = <
&kp ESC &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                           &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &kp MINS &none
&kp TAB   &kp Q  &kp W    &kp F    &kp P     &kp G                            &kp J  &kp L     &kp U     &kp Y    &kp SEMI    &kp LBRC &none
&kp CAPS   &kp A  &kp R    &kp S    &kp T     &kp D                            &kp H  &kp N     &kp E     &kp I    &kp O &kp APOS &kp MPLY
&mo LSHFT &kp Z  &kp X    &kp C    &kp V     &kp B                            &kp K  &kp M     &kp COMMA &kp DOT  &kp SLASH &kp UARW &kp MUTE
&kp LCTRL &kp LGUI &kp LALT &kp SPACE &none &mo RAISE                       &none &none &kp BSPC &kp RET  &kp LARW &kp DARW &kp RARW 
            >;
        };
        gaming {
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   [   |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   | media |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | up    | skip  |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  |       | RAISE| ???   | bksp  | enter| left  | down  | right |
            bindings = <
    &trans &trans &trans   &trans  &trans    &trans                           &trans &trans    &trans    &trans   &trans   &trans &none
    &trans   &kp Q  &kp W    &kp E    &kp R     &kp T                            &kp Y  &kp U     &kp I     &kp O    &kp P    &kp LBRC &none
    &trans   &kp A  &kp S    &kp D    &kp F     &kp G                            &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp APOS &kp C_PLAY_PAUSE
    &trans &kp Z  &kp X    &kp C    &kp V     &kp B                            &kp N  &kp M     &trans &trans  &trans &kp UP &kp C_MUTE
    &trans     &trans  &trans &trans &trans &trans                            &trans  &trans     &kp BSPC  &kp RET &kp LEFT &kp DOWN &kp RIGHT
            >;
        };
        raise {
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   [   |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   | media |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | up    | skip  |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  |       | RAISE| ???   | bksp  | enter| left  | down  | right |
            bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans                            &trans  &trans  &trans  &trans  &trans  &trans  &none
    &trans  &trans  &trans  &trans  &trans  &trans                            &trans  &trans  &trans  &trans  &trans  &trans  &none
    &trans  &trans  &trans  &trans  &trans  &trans                            &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans  &trans  &trans  &trans                            &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans  &trans  &trans  &trans                            &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
